From dac3e3b75f117dede7aa577d48fc10efb5a53dd1 Mon Sep 17 00:00:00 2001
From: Erik Larsson <erik@ortogonal.com>
Date: Thu, 30 Oct 2014 10:49:03 +0100
Subject: [PATCH] Add fix to get QtWayland Compositor running on iMX6.

This patch is not really done yet, it's just some test.

Change-Id: If57be6d26b3d56a772db73d29cede6215f033a80
Signed-off-by: Erik Larsson <erik@ortogonal.com>
---
 src/compositor/wayland_wrapper/qwlcompositor.cpp           | 14 +++++++++++++-
 src/compositor/wayland_wrapper/qwldisplay_p.h              |  4 ++++
 .../wayland-egl/qwaylandeglclientbufferintegration.cpp     |  1 +
 3 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/src/compositor/wayland_wrapper/qwlcompositor.cpp b/src/compositor/wayland_wrapper/qwlcompositor.cpp
index faf32dc..c3c4ad1 100644
--- a/src/compositor/wayland_wrapper/qwlcompositor.cpp
+++ b/src/compositor/wayland_wrapper/qwlcompositor.cpp
@@ -61,6 +61,8 @@
 #include "qwaylandglobalinterface.h"
 #include "qwaylandsurfaceview.h"

+#include <qpa/qplatformnativeinterface.h>
+
 #include <QWindow>
 #include <QSocketNotifier>
 #include <QScreen>
@@ -106,7 +108,7 @@ Compositor *Compositor::instance()

 Compositor::Compositor(QWaylandCompositor *qt_compositor, QWaylandCompositor::ExtensionFlags extensions)
     : m_extensions(extensions)
-    , m_display(new Display)
+    , m_display(NULL)
     , m_default_input_device(0)
     , m_current_frame(0)
     , m_last_queued_buf(-1)
@@ -127,6 +129,16 @@ Compositor::Compositor(QWaylandCompositor *qt_compositor, QWaylandCompositor::Ex
     , m_inputPanel()
     , m_retainSelection(false)
 {
+    QPlatformNativeInterface *nativeInterface = QGuiApplication::platformNativeInterface();
+    if (nativeInterface) {
+        struct wl_display* disp = (struct wl_display*)nativeInterface->nativeResourceForIntegration(QByteArrayLiteral("waylanddisplay"));
+        m_display = new Display(disp);
+        qDebug() << Q_FUNC_INFO << "Gettings wl_display" << disp;
+    } else {
+        qDebug() << Q_FUNC_INFO << "No wl_display";
+        m_display = new Display();
+    }
+
     m_timer.start();
     compositor = this;
 }
diff --git a/src/compositor/wayland_wrapper/qwldisplay_p.h b/src/compositor/wayland_wrapper/qwldisplay_p.h
index f18cb1e..8a968cf 100644
--- a/src/compositor/wayland_wrapper/qwldisplay_p.h
+++ b/src/compositor/wayland_wrapper/qwldisplay_p.h
@@ -52,6 +52,10 @@ class Display
 {
 public:
     Display();
+    Display(struct wl_display* display) {
+        m_display = display;
+    }
+
     ~Display();

     struct wl_display *handle() const { return m_display; }
diff --git a/src/hardwareintegration/client/wayland-egl/qwaylandeglclientbufferintegration.cpp b/src/hardwareintegration/client/wayland-egl/qwaylandeglclientbufferintegration.cpp
index 99a3201..df1948e 100644
--- a/src/hardwareintegration/client/wayland-egl/qwaylandeglclientbufferintegration.cpp
+++ b/src/hardwareintegration/client/wayland-egl/qwaylandeglclientbufferintegration.cpp
@@ -84,6 +84,7 @@ void QWaylandEglClientBufferIntegration::initialize(QWaylandDisplay *display)
         qWarning("EGL not available");
         return;
     }
+    qDebug() << Q_FUNC_INFO << "m_eglDisplay" << m_eglDisplay;

     if (!eglInitialize(m_eglDisplay, &major, &minor)) {
         qWarning("failed to initialize EGL display");
--
1.9.1
